name: Release Grid Trading Plan Calculator

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Run tests
      run: pytest

    - name: Build executable
      run: pyinstaller --onefile grid_trading_app.py

    - name: Get version
      id: get_version
      run: |
        $VERSION = (Select-String -Path README.md -Pattern 'Version:' | Select-Object -First 1).Line.Split(':')[1].Trim()
        echo "VERSION=$VERSION" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Create Tag and Release
      id: create_release
      uses: actions/github-script@v6
      env:
        VERSION: ${{ env.VERSION }}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const version = process.env.VERSION;
          
          await github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/v${version}`,
            sha: context.sha
          });
          
          const release = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: `v${version}`,
            name: `Grid Trading Plan Calculator v${version}`,
            body: `## 新特性\n${context.payload.head_commit.message}\n\n## 安装说明\n1. 下载附件中的 .exe 文件\n2. 双击运行即可使用，无需安装\n\n如有任何问题或建议，欢迎提交 issue。`,
            draft: false,
            prerelease: false
          });
          
          return release.data.upload_url;

    - name: Upload Release Asset
      uses: actions/github-script@v6
      env:
        VERSION: ${{ env.VERSION }}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs').promises;
          const { repo: { owner, repo }, sha } = context;
          const version = process.env.VERSION;
          
          const release = await github.rest.repos.getReleaseByTag({
            owner,
            repo,
            tag: `v${version}`
          });
          
          console.log('Uploading release asset...');
          const asset = await fs.readFile('./dist/grid_trading_app.exe');
          
          await github.rest.repos.uploadReleaseAsset({
            owner,
            repo,
            release_id: release.data.id,
            name: 'grid_trading_app.exe',
            data: asset
          });